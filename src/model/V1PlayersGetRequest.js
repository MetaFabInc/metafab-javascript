/**
 * MetaFab API
 * Documentation for the MetaFab API. Complete API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1PlayersGetRequest model module.
 * @module model/V1PlayersGetRequest
 * @version 1.0.0
 */
class V1PlayersGetRequest {
    /**
     * Constructs a new <code>V1PlayersGetRequest</code>.
     * @alias module:model/V1PlayersGetRequest
     * @param username {String} The players username, used to authenticate the player and if desired represent them in game. Usernames are unique. There cannot be 2 users with the same username created for a game.
     * @param password {String} The password to authenticate as the player. Additionally, this password is used to encrypt/decrypt a player's primary wallet and must be provided anytime this player makes blockchain interactions through various endpoints.
     */
    constructor(username, password) { 
        
        V1PlayersGetRequest.initialize(this, username, password);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, username, password) { 
        obj['username'] = username;
        obj['password'] = password;
    }

    /**
     * Constructs a <code>V1PlayersGetRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1PlayersGetRequest} obj Optional instance to populate.
     * @return {module:model/V1PlayersGetRequest} The populated <code>V1PlayersGetRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1PlayersGetRequest();

            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The players username, used to authenticate the player and if desired represent them in game. Usernames are unique. There cannot be 2 users with the same username created for a game.
 * @member {String} username
 */
V1PlayersGetRequest.prototype['username'] = undefined;

/**
 * The password to authenticate as the player. Additionally, this password is used to encrypt/decrypt a player's primary wallet and must be provided anytime this player makes blockchain interactions through various endpoints.
 * @member {String} password
 */
V1PlayersGetRequest.prototype['password'] = undefined;






export default V1PlayersGetRequest;

