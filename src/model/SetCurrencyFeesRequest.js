/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.1.3
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SetCurrencyFeesRequest model module.
 * @module model/SetCurrencyFeesRequest
 * @version 1.1.3
 */
class SetCurrencyFeesRequest {
    /**
     * Constructs a new <code>SetCurrencyFeesRequest</code>.
     * @alias module:model/SetCurrencyFeesRequest
     * @param recipientAddress {String} The recipient address of currency transaction fees.
     * @param basisPoints {Number} A percentage fee for every transaction represented in basis points. To set a 1.5% fee, you would use a value of 150. This value can be 0, denoting no percentage fees.
     * @param fixedAmount {Number} A fixed fee for every transaction. A value of 0.5 would mean 0.5 of the currency of a transaction is always taken as a fee. This value can be 0, denoting no fixed fees.
     * @param capAmount {Number} The maximum fee amount for any single transaction. The total fee of a transaction is calculated as the sum of the basis points (percentage) fee, and fixed fee. If a calculated fee is greater than this maximum fee value, the maximum fee will be used instead.
     */
    constructor(recipientAddress, basisPoints, fixedAmount, capAmount) { 
        
        SetCurrencyFeesRequest.initialize(this, recipientAddress, basisPoints, fixedAmount, capAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, recipientAddress, basisPoints, fixedAmount, capAmount) { 
        obj['recipientAddress'] = recipientAddress;
        obj['basisPoints'] = basisPoints;
        obj['fixedAmount'] = fixedAmount;
        obj['capAmount'] = capAmount;
    }

    /**
     * Constructs a <code>SetCurrencyFeesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetCurrencyFeesRequest} obj Optional instance to populate.
     * @return {module:model/SetCurrencyFeesRequest} The populated <code>SetCurrencyFeesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetCurrencyFeesRequest();

            if (data.hasOwnProperty('recipientAddress')) {
                obj['recipientAddress'] = ApiClient.convertToType(data['recipientAddress'], 'String');
            }
            if (data.hasOwnProperty('basisPoints')) {
                obj['basisPoints'] = ApiClient.convertToType(data['basisPoints'], 'Number');
            }
            if (data.hasOwnProperty('fixedAmount')) {
                obj['fixedAmount'] = ApiClient.convertToType(data['fixedAmount'], 'Number');
            }
            if (data.hasOwnProperty('capAmount')) {
                obj['capAmount'] = ApiClient.convertToType(data['capAmount'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The recipient address of currency transaction fees.
 * @member {String} recipientAddress
 */
SetCurrencyFeesRequest.prototype['recipientAddress'] = undefined;

/**
 * A percentage fee for every transaction represented in basis points. To set a 1.5% fee, you would use a value of 150. This value can be 0, denoting no percentage fees.
 * @member {Number} basisPoints
 */
SetCurrencyFeesRequest.prototype['basisPoints'] = undefined;

/**
 * A fixed fee for every transaction. A value of 0.5 would mean 0.5 of the currency of a transaction is always taken as a fee. This value can be 0, denoting no fixed fees.
 * @member {Number} fixedAmount
 */
SetCurrencyFeesRequest.prototype['fixedAmount'] = undefined;

/**
 * The maximum fee amount for any single transaction. The total fee of a transaction is calculated as the sum of the basis points (percentage) fee, and fixed fee. If a calculated fee is greater than this maximum fee value, the maximum fee will be used instead.
 * @member {Number} capAmount
 */
SetCurrencyFeesRequest.prototype['capAmount'] = undefined;






export default SetCurrencyFeesRequest;

