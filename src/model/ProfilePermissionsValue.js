/**
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProfilePermissionsValue model module.
 * @module model/ProfilePermissionsValue
 * @version 1.5.1
 */
class ProfilePermissionsValue {
    /**
     * Constructs a new <code>ProfilePermissionsValue</code>.
     * Key should be the contract address, value is the permissions object request for the contract.
     * @alias module:model/ProfilePermissionsValue
     */
    constructor() { 
        
        ProfilePermissionsValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProfilePermissionsValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfilePermissionsValue} obj Optional instance to populate.
     * @return {module:model/ProfilePermissionsValue} The populated <code>ProfilePermissionsValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfilePermissionsValue();

            if (data.hasOwnProperty('chain')) {
                obj['chain'] = ApiClient.convertToType(data['chain'], 'String');
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], ['String']);
            }
            if (data.hasOwnProperty('functions')) {
                obj['functions'] = ApiClient.convertToType(data['functions'], ['String']);
            }
            if (data.hasOwnProperty('erc20Limit')) {
                obj['erc20Limit'] = ApiClient.convertToType(data['erc20Limit'], 'Number');
            }
            if (data.hasOwnProperty('erc1155Limits')) {
                obj['erc1155Limits'] = ApiClient.convertToType(data['erc1155Limits'], {'String': 'Number'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProfilePermissionsValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProfilePermissionsValue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['chain'] && !(typeof data['chain'] === 'string' || data['chain'] instanceof String)) {
            throw new Error("Expected the field `chain` to be a primitive type in the JSON string but got " + data['chain']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scopes'])) {
            throw new Error("Expected the field `scopes` to be an array in the JSON data but got " + data['scopes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['functions'])) {
            throw new Error("Expected the field `functions` to be an array in the JSON data but got " + data['functions']);
        }

        return true;
    }


}



/**
 * The target chain for the contract and related permissions.
 * @member {String} chain
 */
ProfilePermissionsValue.prototype['chain'] = undefined;

/**
 * An optional array of valid permissioning scopes.
 * @member {Array.<String>} scopes
 */
ProfilePermissionsValue.prototype['scopes'] = undefined;

/**
 * An optional array of contract functions to request permission for.
 * @member {Array.<String>} functions
 */
ProfilePermissionsValue.prototype['functions'] = undefined;

/**
 * A maximum lifetime limit of erc20 that can be tranferred for this contract address.
 * @member {Number} erc20Limit
 */
ProfilePermissionsValue.prototype['erc20Limit'] = undefined;

/**
 * An object mapping erc1155 ids to maximum lifetime transfer limits of each permitted item id supplied for this contract address.
 * @member {Object.<String, Number>} erc1155Limits
 */
ProfilePermissionsValue.prototype['erc1155Limits'] = undefined;






export default ProfilePermissionsValue;

