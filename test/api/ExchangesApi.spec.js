/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.2
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MetafabJavascript);
  }
}(this, function(expect, MetafabJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MetafabJavascript.ExchangesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ExchangesApi', function() {
    describe('createExchange', function() {
      it('should call createExchange successfully', function(done) {
        //uncomment below and update the code to test createExchange
        //instance.createExchange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExchangeOffer', function() {
      it('should call getExchangeOffer successfully', function(done) {
        //uncomment below and update the code to test getExchangeOffer
        //instance.getExchangeOffer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExchangeOffers', function() {
      it('should call getExchangeOffers successfully', function(done) {
        //uncomment below and update the code to test getExchangeOffers
        //instance.getExchangeOffers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExchanges', function() {
      it('should call getExchanges successfully', function(done) {
        //uncomment below and update the code to test getExchanges
        //instance.getExchanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeExchangeOffer', function() {
      it('should call removeExchangeOffer successfully', function(done) {
        //uncomment below and update the code to test removeExchangeOffer
        //instance.removeExchangeOffer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setExchangeOffer', function() {
      it('should call setExchangeOffer successfully', function(done) {
        //uncomment below and update the code to test setExchangeOffer
        //instance.setExchangeOffer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('useExchangeOffer', function() {
      it('should call useExchangeOffer successfully', function(done) {
        //uncomment below and update the code to test useExchangeOffer
        //instance.useExchangeOffer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('withdrawFromExchange', function() {
      it('should call withdrawFromExchange successfully', function(done) {
        //uncomment below and update the code to test withdrawFromExchange
        //instance.withdrawFromExchange(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
