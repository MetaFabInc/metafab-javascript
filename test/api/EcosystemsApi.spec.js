/**
 * MetaFab API
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MetafabJavascript);
  }
}(this, function(expect, MetafabJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MetafabJavascript.EcosystemsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EcosystemsApi', function() {
    describe('approveEcosystemGame', function() {
      it('should call approveEcosystemGame successfully', function(done) {
        //uncomment below and update the code to test approveEcosystemGame
        //instance.approveEcosystemGame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authEcosystem', function() {
      it('should call authEcosystem successfully', function(done) {
        //uncomment below and update the code to test authEcosystem
        //instance.authEcosystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authProfile', function() {
      it('should call authProfile successfully', function(done) {
        //uncomment below and update the code to test authProfile
        //instance.authProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authProfilePlayer', function() {
      it('should call authProfilePlayer successfully', function(done) {
        //uncomment below and update the code to test authProfilePlayer
        //instance.authProfilePlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEcosystem', function() {
      it('should call createEcosystem successfully', function(done) {
        //uncomment below and update the code to test createEcosystem
        //instance.createEcosystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProfile', function() {
      it('should call createProfile successfully', function(done) {
        //uncomment below and update the code to test createProfile
        //instance.createProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProfilePlayer', function() {
      it('should call createProfilePlayer successfully', function(done) {
        //uncomment below and update the code to test createProfilePlayer
        //instance.createProfilePlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEcosystem', function() {
      it('should call getEcosystem successfully', function(done) {
        //uncomment below and update the code to test getEcosystem
        //instance.getEcosystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEcosystemGame', function() {
      it('should call getEcosystemGame successfully', function(done) {
        //uncomment below and update the code to test getEcosystemGame
        //instance.getEcosystemGame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEcosystemGames', function() {
      it('should call getEcosystemGames successfully', function(done) {
        //uncomment below and update the code to test getEcosystemGames
        //instance.getEcosystemGames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProfileGame', function() {
      it('should call getProfileGame successfully', function(done) {
        //uncomment below and update the code to test getProfileGame
        //instance.getProfileGame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProfileGames', function() {
      it('should call getProfileGames successfully', function(done) {
        //uncomment below and update the code to test getProfileGames
        //instance.getProfileGames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unapproveEcosystemGame', function() {
      it('should call unapproveEcosystemGame successfully', function(done) {
        //uncomment below and update the code to test unapproveEcosystemGame
        //instance.unapproveEcosystemGame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEcosystem', function() {
      it('should call updateEcosystem successfully', function(done) {
        //uncomment below and update the code to test updateEcosystem
        //instance.updateEcosystem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProfile', function() {
      it('should call updateProfile successfully', function(done) {
        //uncomment below and update the code to test updateProfile
        //instance.updateProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProfilePlayer', function() {
      it('should call updateProfilePlayer successfully', function(done) {
        //uncomment below and update the code to test updateProfilePlayer
        //instance.updateProfilePlayer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
