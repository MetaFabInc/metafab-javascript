/**
 * MetaFab API
 *  Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: metafabproject@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MetafabJavascript);
  }
}(this, function(expect, MetafabJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MetafabJavascript.ItemsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ItemsApi', function() {
    describe('batchMintCollectionItems', function() {
      it('should call batchMintCollectionItems successfully', function(done) {
        //uncomment below and update the code to test batchMintCollectionItems
        //instance.batchMintCollectionItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchTransferCollectionItems', function() {
      it('should call batchTransferCollectionItems successfully', function(done) {
        //uncomment below and update the code to test batchTransferCollectionItems
        //instance.batchTransferCollectionItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('burnCollectionItem', function() {
      it('should call burnCollectionItem successfully', function(done) {
        //uncomment below and update the code to test burnCollectionItem
        //instance.burnCollectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCollection', function() {
      it('should call createCollection successfully', function(done) {
        //uncomment below and update the code to test createCollection
        //instance.createCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCollectionItem', function() {
      it('should call createCollectionItem successfully', function(done) {
        //uncomment below and update the code to test createCollectionItem
        //instance.createCollectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionApproval', function() {
      it('should call getCollectionApproval successfully', function(done) {
        //uncomment below and update the code to test getCollectionApproval
        //instance.getCollectionApproval(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionItem', function() {
      it('should call getCollectionItem successfully', function(done) {
        //uncomment below and update the code to test getCollectionItem
        //instance.getCollectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionItemBalance', function() {
      it('should call getCollectionItemBalance successfully', function(done) {
        //uncomment below and update the code to test getCollectionItemBalance
        //instance.getCollectionItemBalance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionItemBalances', function() {
      it('should call getCollectionItemBalances successfully', function(done) {
        //uncomment below and update the code to test getCollectionItemBalances
        //instance.getCollectionItemBalances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionItemSupplies', function() {
      it('should call getCollectionItemSupplies successfully', function(done) {
        //uncomment below and update the code to test getCollectionItemSupplies
        //instance.getCollectionItemSupplies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionItemSupply', function() {
      it('should call getCollectionItemSupply successfully', function(done) {
        //uncomment below and update the code to test getCollectionItemSupply
        //instance.getCollectionItemSupply(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionItemTimelock', function() {
      it('should call getCollectionItemTimelock successfully', function(done) {
        //uncomment below and update the code to test getCollectionItemTimelock
        //instance.getCollectionItemTimelock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollectionItems', function() {
      it('should call getCollectionItems successfully', function(done) {
        //uncomment below and update the code to test getCollectionItems
        //instance.getCollectionItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCollections', function() {
      it('should call getCollections successfully', function(done) {
        //uncomment below and update the code to test getCollections
        //instance.getCollections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mintCollectionItem', function() {
      it('should call mintCollectionItem successfully', function(done) {
        //uncomment below and update the code to test mintCollectionItem
        //instance.mintCollectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setCollectionApproval', function() {
      it('should call setCollectionApproval successfully', function(done) {
        //uncomment below and update the code to test setCollectionApproval
        //instance.setCollectionApproval(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setCollectionItemTimelock', function() {
      it('should call setCollectionItemTimelock successfully', function(done) {
        //uncomment below and update the code to test setCollectionItemTimelock
        //instance.setCollectionItemTimelock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transferCollectionItem', function() {
      it('should call transferCollectionItem successfully', function(done) {
        //uncomment below and update the code to test transferCollectionItem
        //instance.transferCollectionItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
